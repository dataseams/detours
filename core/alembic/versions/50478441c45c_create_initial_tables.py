"""create initial tables

Revision ID: 50478441c45c
Revises: 5379d8489aa2
Create Date: 2021-06-05 03:47:23.517046

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "50478441c45c"
down_revision = "5379d8489aa2"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "time_of_day",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=20), nullable=True),
        sa.Column("start_time", postgresql.TIME(), nullable=True),
        sa.Column("end_time", postgresql.TIME(), nullable=True),
        sa.PrimaryKeyConstraint("id", name="time_of_day_pkey"),
    )

    op.create_table(
        "activity_type",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), nullable=True),
        sa.Column("material_icon", sa.VARCHAR(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id", name="activity_type_pkey"),
    )

    op.create_table(
        "city",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("code", sa.VARCHAR(length=3), nullable=True),
        sa.Column("name", sa.VARCHAR(length=50), nullable=True),
        sa.Column("state", sa.VARCHAR(length=20), nullable=True),
        sa.Column("state_abbr", sa.VARCHAR(length=2), nullable=True),
        sa.Column("country", sa.VARCHAR(length=50), nullable=True),
        sa.Column(
            "latitude", sa.NUMERIC(precision=10, scale=6), nullable=True
        ),
        sa.Column(
            "longitude", sa.NUMERIC(precision=10, scale=6), nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="city_pkey"),
    )

    op.create_table(
        "survey_response",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("traveler_email", sa.VARCHAR(length=100), nullable=True),
        sa.Column(
            "json", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("time_stamp", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("id", name="survey_response_pkey"),
    )

    op.create_table(
        "trip_plan",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("survey_response_id", sa.INTEGER()),
        sa.Column("start_date", sa.DATE()),
        sa.Column("end_date", sa.DATE()),
        sa.Column("start_time", sa.INTEGER()),
        sa.Column("city_id", sa.INTEGER()),
        sa.Column("spending_per_day", sa.INTEGER()),
        sa.Column("hours_saved", sa.VARCHAR(length=50)),
        sa.Column(
            "interests_matched",
            postgresql.ARRAY(sa.VARCHAR(length=100)),
            nullable=True,
        ),
        sa.Column("time_stamp", postgresql.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"], ["city.id"], name="trip_plan_city_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["start_time"],
            ["time_of_day.id"],
            name="trip_plan_start_time_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["survey_response_id"],
            ["survey_response.id"],
            name="trip_plan_survey_response_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="trip_plan_pkey"),
    )

    op.create_table(
        "place",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=True),
        sa.Column("description", sa.VARCHAR(length=500), nullable=True),
        sa.Column("address", sa.VARCHAR(length=200), nullable=True),
        sa.Column("locality", sa.VARCHAR(length=200), nullable=True),
        sa.Column("zipcode", sa.VARCHAR(length=10), nullable=True),
        sa.Column(
            "latitude", sa.NUMERIC(precision=10, scale=6), nullable=True
        ),
        sa.Column(
            "longitude", sa.NUMERIC(precision=10, scale=6), nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="place_pkey"),
    )

    op.create_table(
        "activity",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), nullable=True),
        sa.Column("place_id", sa.INTEGER(), nullable=True),
        sa.Column("activity_type_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_type_id"],
            ["activity_type.id"],
            name="activity_activity_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["place_id"], ["place.id"], name="activity_place_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="activity_pkey"),
    )

    op.create_table(
        "daily_plan",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("date", sa.DATE(), nullable=True),
        sa.Column("trip_plan_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["trip_plan_id"],
            ["trip_plan.id"],
            name="daily_plan_trip_plan_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="daily_plan_pkey"),
    )

    op.create_table(
        "plan_item",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("order", sa.INTEGER(), nullable=True),
        sa.Column("daily_plan_id", sa.INTEGER(), nullable=True),
        sa.Column("activity_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_id"], ["activity.id"], name="plan_item_activity_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["daily_plan_id"],
            ["daily_plan.id"],
            name="plan_item_daily_plan_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="plan_item_pkey"),
    )
    # ### end Alembic commands ###


def downgrade():
    op.drop_table("plan_item")
    op.drop_table("daily_plan")
    op.drop_table("activity")
    op.drop_table("trip_plan")
    op.drop_table("survey_response")
    op.drop_table("city")
    op.drop_table("place")
    op.drop_table("activity_type")
    op.drop_table("time_of_day")
