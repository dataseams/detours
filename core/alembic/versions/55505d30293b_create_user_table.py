"""Create user table.

Revision ID: 55505d30293b
Revises: 17f02ccbe3c7
Create Date: 2021-08-04 19:32:22.509340

"""
import sqlalchemy as sa
from alembic import context, op
from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

# revision identifiers, used by Alembic.
revision = "55505d30293b"
down_revision = "17f02ccbe3c7"
branch_labels = None
depends_on = None


class User(Base):
    """Define a user entity."""

    __tablename__ = "user"
    id = sa.Column(sa.Integer, primary_key=True)
    email = sa.Column(sa.String(100), unique=True, nullable=False)
    gender = sa.Column(sa.String(20))
    age = sa.Column(sa.Integer)
    wants_promotions_and_tips = sa.Column(sa.Boolean, default=True)
    wants_reminders = sa.Column(sa.Boolean, default=True)


class SurveyResponse(Base):
    """Define a personality survey response entity."""

    __tablename__ = "survey_response"
    id = sa.Column(sa.Integer, primary_key=True)
    traveler_email = sa.Column(sa.String(100))


def upgrade():
    """Upgrade database."""
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_upgrades()


def downgrade():
    """Downgrade database."""
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(length=200), nullable=False),
        sa.Column("gender", sa.String(length=20), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("wants_promotions_and_tips", sa.Boolean(), nullable=True),
        sa.Column("wants_reminders", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.CheckConstraint(
            "COALESCE(gender, 'Their') in ('Her', 'Him', 'Their')"
        ),
        sa.CheckConstraint("COALESCE(age, 0) >= 0"),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user")
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here."""
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    unique_email_records = (
        session.query(SurveyResponse)
        .distinct(SurveyResponse.traveler_email)
        .all()
    )
    for record in unique_email_records:
        session.add(User(email=record.traveler_email))
    session.commit()


def data_downgrades():
    """Add any optional data downgrade migrations here."""
    pass
